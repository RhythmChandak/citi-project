{"version":3,"sources":["./src/app/services/dashboard.service.ts","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/layouts/admin-layout/admin-layout.routing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAkD;AACP;AAEgB;;IASzD,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,eAAU,GAAG,wEAAW,CAAC,UAAU,CAAC;IAEI,CAAC;IAEzC,wCAAa,GAAb;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2GAA2G,CAAC;IACnI,CAAC;IAED,kDAAuB,GAAvB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,oCAAoC,CAAC;IAC9E,CAAC;IAED,uDAA4B,GAA5B;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,sCAAsC,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACzH,CAAC;;gBAxBM,+DAAU;;IAQN,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;uFAK0B,+DAAU;OAJzB,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACe;AACT;AACA;AACF;AAEc;AACyB;AAElC;AACJ;AACkB;AACpB;AACW;;;IAkBtB,CAAC;IAArB,iBAAiB;QAhB7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,uEAAiB,CAAC;gBACxC,0DAAW;gBACX,qEAAgB;gBAChB,qEAAS;gBACT,8EAAqB;gBACrB,+DAAc;gBACd,2DAAY;gBACZ,0DAAW;aACZ;YACD,YAAY,EAAE;gBACZ,4FAAkB;aACnB;SACF,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AC/BoB;AACrB;AAGyC;AACzB;;IAyB3C,4BAAoB,gBAAkC,EAAU,cAA8B;QAA1E,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAZvF,kBAAa,GAAa,EAAE,CAAC;QAC7B,oBAAe,GAAa,EAAE,CAAC;QAE/B,uBAAkB,GAAY,KAAK,CAAC;QACpC,iBAAY,GAAY,KAAK,CAAC;QAC9B,iBAAY,GAAY,KAAK,CAAC;QASnC,IAAI,CAAC,iBAAiB,GAAG;YACvB;gBACE,UAAU,EAAE,QAAQ;gBACpB,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,CAAC;aACb;YACD;gBACE,UAAU,EAAE,OAAO;gBACnB,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,CAAC;aACb;YACD;gBACE,UAAU,EAAE,OAAO;gBACnB,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,CAAC;aACb;SACF,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA+CC;QA7CC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAC7C,cAAI;YACF,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ;gBAC/B,KAAI,CAAC,YAAY,GAAG,IAAI;aACzB;iBACI;gBACH,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,wCAAwC,EAAE,CAAC,CAAC;aAC3H;QACH,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,qDAAqD,EAAE,CAAC,CAAC;QACxI,CAAC,CACF;QAED,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CACvD,cAAI;YACF,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,EAAX,CAAW,CAAC;gBAClD,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,EAAd,CAAc,CAAC;gBACvD,KAAI,CAAC,kBAAkB,GAAG,IAAI;gBAC9B,KAAI,CAAC,kBAAkB,EAAE;aAE1B;iBACI;gBACH,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,mDAAmD,EAAE,CAAC,CAAC;aACtI;QACH,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,gEAAgE,EAAE,CAAC,CAAC;QACnJ,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAC5D,cAAI;YACF,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,KAAI,CAAC,kBAAkB,GAAG,IAAI;gBAC9B,KAAI,CAAC,YAAY,GAAG,IAAI;aACzB;iBACI;gBACH,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,iDAAiD,EAAE,CAAC,CAAC;aACpI;QACH,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,8DAA8D,EAAE,CAAC,CAAC;QACjJ,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,+CAAkB,GAAlB;QAEE,IAAI,6BAA6B,GAAQ;YACvC,mBAAmB,EAAE,KAAK;YAC1B,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf;YAED,QAAQ,EAAE;gBACR,eAAe,EAAE,SAAS;gBAC1B,cAAc,EAAE,MAAM;gBACtB,aAAa,EAAE,MAAM;gBACrB,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,CAAC;gBACZ,QAAQ,EAAE,SAAS;aACpB;YACD,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,KAAK,EAAE,CAAC;wBAEN,SAAS,EAAE;4BACT,UAAU,EAAE,KAAK;4BACjB,KAAK,EAAE,sBAAsB;4BAC7B,aAAa,EAAE,aAAa;yBAC7B;wBACD,KAAK,EAAE;4BACL,YAAY,EAAE,EAAE;4BAChB,YAAY,EAAE,EAAE;4BAChB,OAAO,EAAE,EAAE;4BACX,SAAS,EAAE,SAAS;yBACrB;qBACF,CAAC;gBAEF,KAAK,EAAE,CAAC;wBAEN,SAAS,EAAE;4BACT,UAAU,EAAE,KAAK;4BACjB,KAAK,EAAE,sBAAsB;4BAC7B,aAAa,EAAE,aAAa;yBAC7B;wBACD,KAAK,EAAE;4BACL,OAAO,EAAE,EAAE;4BACX,SAAS,EAAE,SAAS;yBACrB;qBACF,CAAC;aACH;SACF,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAElE,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC;QACvD,cAAc,CAAC,YAAY,CAAC,GAAG,EAAE,sBAAsB,CAAC,CAAC;QACzD,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC,CAAC,aAAa;QAInE,IAAI,OAAO,GAAG,IAAI,+CAAK,CAAC,IAAI,CAAC,GAAG,EAAE;YAChC,IAAI,EAAE,KAAK;YACX,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf;YACD,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,aAAa;gBAC1B,QAAQ,EAAE,CAAC;wBACT,KAAK,EAAE,YAAY;wBACnB,IAAI,EAAE,IAAI;wBACV,eAAe,EAAE,cAAc;wBAC/B,oBAAoB,EAAE,cAAc;wBACpC,WAAW,EAAE,SAAS;wBACtB,WAAW,EAAE,CAAC;wBACd,UAAU,EAAE,EAAE;wBACd,gBAAgB,EAAE,GAAG;wBACrB,IAAI,EAAE,IAAI,CAAC,eAAe;qBAC3B,CAAC;aACH;YACD,OAAO,EAAE,6BAA6B;SACvC,CAAC,CAAC;IACL,CAAC;;gBAlLM,mFAAgB;gBAChB,0DAAc;;IASV,kBAAkB;QAP9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,sFAAuC;YACvC,SAAS,EAAE,CAAC,0DAAc,CAAC;SAC5B,CAAC;uFAmBsC,mFAAgB,EAA0B,0DAAc;OAhBnF,kBAAkB,CA0K9B;IAAD,yBAAC;CAAA;AA1K8B;;;;;;;;;;;;;ACd/B;AAAe,slBAAuhB,k3BAAk3B,kaAAka,wBAAwB,WAAW,wBAAwB,6BAA6B,qCAAqC,iBAAiB,wBAAwB,QAAQ,mBAAmB,+xBAA+xB,gOAAgO,kDAAkD,KAAK,kCAAkC,oDAAoD,MAAM,gCAAgC,oDAAoD,sBAAsB,uCAAuC,yJAAyJ,gDAAgD,oCAAoC,0JAA0J,kDAAkD,oCAAoC,0JAA0J,kDAAkD,qCAAqC,+NAA+N,4FAA4F,gEAAgE,kCAAkC,8IAA8I,iEAAiE,mCAAmC,8IAA8I,gEAAgE,kCAAkC,8IAA8I,+DAA+D,iCAAiC,6KAA6K,E;;;;;;;;;;;;ACCtwK;AAAA;AAAA;AAAA;AAAA;AAAoF;AAGU;AACU;AAGjG,IAAM,iBAAiB,GAAW;IACvC,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2GAAoB,EAAE;IACxD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,qHAAwB,EAAE;CACjE,CAAC","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  backendUrl = environment.backendUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLatestNews(): Observable<any> {\r\n    return this.http.get(\"https://cors-anywhere.herokuapp.com/https://newsapi.org/v2/top-headlines?country=in&category=business&apiKey=fe85013235624481abbe65c9f37baf27\")\r\n  }\r\n\r\n  getSectorWiseComparison(): Observable<any> {\r\n    return this.http.get(this.backendUrl + \"/sectorStocks/showSectorWiseChange\")\r\n  }\r\n\r\n  getTopPerformingStockDetails(): Observable<any> {\r\n    return this.http.get(this.backendUrl + \"/userHistory/showTopPerformingStock/\" + sessionStorage.getItem(\"loggedInUser\"))\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { AdminLayoutRoutes } from \"./admin-layout.routing\";\r\nimport { DashboardComponent } from \"../../components/dashboard/dashboard.component\";\r\n\r\nimport { CarouselModule } from 'primeng/carousel';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AdminLayoutRoutes),\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    ProgressSpinnerModule,\r\n    CarouselModule,\r\n    ButtonModule,\r\n    ToastModule\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n  ]\r\n})\r\nexport class AdminLayoutModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport Chart from 'chart.js';\r\nimport { NewsArticle } from \"src/app/models/news-article\";\r\nimport { UserStock } from \"src/app/models/user-stock\";\r\nimport { DashboardService } from \"src/app/services/dashboard.service\";\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"dashboard.component.html\",\r\n  providers: [MessageService]\r\n})\r\n\r\n\r\nexport class DashboardComponent implements OnInit {\r\n  public canvas: any;\r\n  public ctx;\r\n\r\n  public listOfSectors: String[] = [];\r\n  public listOfAvgGrowth: Number[] = [];\r\n  public topPerformingStock: UserStock;\r\n  public sectorWiseDataFlag: boolean = false;\r\n  public newsDataFlag: boolean = false;\r\n  public topStockFlag: boolean = false;\r\n\r\n  public latestNews: any;\r\n  public newsArticles: NewsArticle[];\r\n\r\n  responsiveOptions;\r\n\r\n  constructor(private dashboardService: DashboardService, private messageService: MessageService) {\r\n\r\n    this.responsiveOptions = [\r\n      {\r\n        breakpoint: '1024px',\r\n        numVisible: 3,\r\n        numScroll: 3\r\n      },\r\n      {\r\n        breakpoint: '768px',\r\n        numVisible: 2,\r\n        numScroll: 2\r\n      },\r\n      {\r\n        breakpoint: '560px',\r\n        numVisible: 1,\r\n        numScroll: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.dashboardService.getLatestNews().subscribe(\r\n      data => {\r\n        if (data != null && data.articles.length > 0) {\r\n          this.latestNews = data.articles\r\n          this.newsDataFlag = true\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'NetworkError', detail: 'Trouble getting latest news, try again' });\r\n        }\r\n      }, err => {\r\n        this.messageService.add({ severity: 'error', summary: 'ServerError', detail: 'Server Down. Trouble getting latest news, try again' });\r\n      }\r\n    )\r\n\r\n    this.dashboardService.getSectorWiseComparison().subscribe(\r\n      data => {\r\n        if (data != null && data.length > 0) {\r\n          this.listOfSectors = data.map(data => data.sector)\r\n          this.listOfAvgGrowth = data.map(data => data.avgGrowth)\r\n          this.sectorWiseDataFlag = true\r\n          this.renderSectorsTable()\r\n\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'NetworkError', detail: 'Trouble getting Sector Wise Comparison, try again' });\r\n        }\r\n      }, err => {\r\n        this.messageService.add({ severity: 'error', summary: 'ServerError', detail: 'Server down. Trouble getting Sector Wise Comparison, try again' });\r\n      }\r\n    );\r\n\r\n    this.dashboardService.getTopPerformingStockDetails().subscribe(\r\n      data => {\r\n        if (data != null) {\r\n          this.topPerformingStock = data\r\n          this.topStockFlag = true\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'NetworkError', detail: 'Trouble getting Top Performing Stock, try again' });\r\n        }\r\n      }, err => {\r\n        this.messageService.add({ severity: 'error', summary: 'ServerError', detail: 'Server down. Trouble getting Top Performing Stock, try again' });\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  renderSectorsTable() {\r\n\r\n    var gradientBarChartConfiguration: any = {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n\r\n      tooltips: {\r\n        backgroundColor: '#f5f5f5',\r\n        titleFontColor: '#333',\r\n        bodyFontColor: '#666',\r\n        bodySpacing: 4,\r\n        xPadding: 12,\r\n        mode: \"nearest\",\r\n        intersect: 0,\r\n        position: \"nearest\"\r\n      },\r\n      responsive: true,\r\n      scales: {\r\n        yAxes: [{\r\n\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(29,140,248,0.1)',\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 60,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\"\r\n          }\r\n        }],\r\n\r\n        xAxes: [{\r\n\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: 'rgba(29,140,248,0.1)',\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\"\r\n          }\r\n        }]\r\n      }\r\n    };\r\n\r\n    this.canvas = document.getElementById(\"SectorChart\");\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, 'rgba(29,140,248,0.2)');\r\n    gradientStroke.addColorStop(0.4, 'rgba(29,140,248,0.0)');\r\n    gradientStroke.addColorStop(0, 'rgba(29,140,248,0)'); //blue colors\r\n\r\n\r\n\r\n    var myChart = new Chart(this.ctx, {\r\n      type: 'bar',\r\n      responsive: true,\r\n      legend: {\r\n        display: false\r\n      },\r\n      data: {\r\n        labels: this.listOfSectors,\r\n        datasets: [{\r\n          label: \"Avg Growth\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: '#1f8ef1',\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: this.listOfAvgGrowth,\r\n        }]\r\n      },\r\n      options: gradientBarChartConfiguration\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","export default \"<p-toast></p-toast>\\r\\n<div class=\\\"content\\\">\\r\\n  <div class=\\\" row\\\">\\r\\n    <div class=\\\" col-lg-12\\\">\\r\\n      <div class=\\\" card card-chart\\\">\\r\\n        <div class=\\\" card-header\\\">\\r\\n          <h4 class=\\\" card-category\\\">All Sectors</h4>\\r\\n          <h2 class=\\\" card-title\\\">\\r\\n            <i class=\\\" tim-icons icon-chart-bar-32 text-info\\\"> </i> SECTOR WISE COMPARISON\\r\\n          </h2>\\r\\n        </div>\\r\\n        <div class=\\\" card-body\\\">\\r\\n          <div *ngIf=\\\"!sectorWiseDataFlag\\\" style=\\\"text-align: center;\\\">\\r\\n            <p-progressSpinner></p-progressSpinner>\\r\\n          </div>\\r\\n          <div class=\\\" chart-area\\\">\\r\\n            <canvas id=\\\"SectorChart\\\"> </canvas>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\" row\\\">\\r\\n    <div class=\\\" col-lg-6\\\">\\r\\n      <div class=\\\" card card-chart\\\">\\r\\n        <div class=\\\" card-header\\\">\\r\\n          <div class=\\\" row\\\">\\r\\n            <div class=\\\" col-sm-12 text-left\\\">\\r\\n              <h5 class=\\\" card-category\\\">Current News</h5>\\r\\n              <h4 class=\\\" card-title\\\">\\r\\n                <i class=\\\" tim-icons icon-bulb-63 text-success\\\"> </i> TOP BUSINESS HEADLINES\\r\\n              </h4>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\" card-body\\\">\\r\\n          <div *ngIf = \\\"!newsDataFlag\\\" style=\\\"text-align: center;\\\">\\r\\n            <p-progressSpinner></p-progressSpinner>\\r\\n          </div>\\r\\n          <p-carousel *ngIf=\\\"newsDataFlag\\\" [value]=\\\"latestNews\\\" styleClass=\\\"custom-carousel\\\" [numVisible]=\\\"1\\\" [numScroll]=\\\"1\\\"\\r\\n            [circular]=\\\"true\\\" [autoplayInterval]=\\\"4000\\\" [responsiveOptions]=\\\"responsiveOptions\\\">\\r\\n            <ng-template let-newsArticle pTemplate=\\\"item\\\">\\r\\n              <img src=\\\"{{newsArticle.urlToImage}}\\\" alt=\\\"{{newsArticle.urlToImage}}\\\" style=\\\"max-height: 300px;\\\"><br>\\r\\n              <a href=\\\"{{newsArticle.url}}\\\" style=\\\"color: white;\\\"><u>{{newsArticle.title}}</u></a>\\r\\n            </ng-template>\\r\\n          </p-carousel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\" col-lg-6\\\">\\r\\n      <div class=\\\" card card-chart\\\">\\r\\n        <div class=\\\" card-header\\\">\\r\\n          <div class=\\\" row\\\">\\r\\n            <div class=\\\" col-sm-12 text-left\\\">\\r\\n              <h5 class=\\\" card-category\\\">User History Based</h5>\\r\\n\\r\\n              <h4 class=\\\" card-title\\\">\\r\\n                <i class=\\\" tim-icons icon-trophy text-success\\\" pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"left\\\">\\r\\n                </i> TOP PERFORMING STOCK\\r\\n              </h4>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\" card-body\\\">\\r\\n          <div *ngIf=\\\"!topStockFlag\\\" style=\\\"text-align: center;\\\">\\r\\n            <p-progressSpinner></p-progressSpinner>\\r\\n          </div>\\r\\n          <h4 *ngIf=\\\"topStockFlag\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\" style=\\\"text-align: center;\\\">\\r\\n                <h1 style=\\\"color: #1DCEF1;\\\">{{topPerformingStock.companySymbol}}</h1>\\r\\n                <h2 style=\\\"color: #25D4E6;\\\"> {{topPerformingStock.companyName}}</h2>\\r\\n                <h4 style=\\\"color: #2DDADB;\\\">Market Capital : {{topPerformingStock.marketCap | number}} INR</h4><br>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <h4 style=\\\"color: #35E0D1;\\\"><u>Volume</u><br>\\r\\n                      {{topPerformingStock.volume | number}}\\r\\n                    </h4>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <h4 style=\\\"color: #35E0D1;\\\"><u>Change %</u><br>\\r\\n                      {{topPerformingStock.change | number}}\\r\\n                    </h4>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <h4 style=\\\"color: #35E0D1;\\\"><u>PE Ratio</u><br>\\r\\n                      {{topPerformingStock.peRatio | number}}\\r\\n                    </h4>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <br><br>\\r\\n\\r\\n            <div class=\\\"row\\\" style=\\\"text-align: center;\\\">\\r\\n              <div class=\\\"col-lg-3\\\">\\r\\n                <h4 style=\\\"color: #3DE6C6;\\\">\\r\\n                  <u>Open</u><br>\\r\\n                  {{topPerformingStock.open | number}} INR\\r\\n                </h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-3\\\">\\r\\n                <h4 style=\\\"color: #3DE6C6;\\\">\\r\\n                  <u>Close</u><br>\\r\\n                  {{topPerformingStock.close | number}} INR\\r\\n                </h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-3\\\">\\r\\n                <h4 style=\\\"color: #3DE6C6;\\\">\\r\\n                  <u>High</u><br>\\r\\n                  {{topPerformingStock.high | number}} INR\\r\\n                </h4>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-3\\\">\\r\\n                <h4 style=\\\"color: #3DE6C6;\\\">\\r\\n                  <u>Low</u><br>\\r\\n                  {{topPerformingStock.low | number}} INR\\r\\n                </h4>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </h4>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Routes } from \"@angular/router\";\r\nimport { DashboardComponent } from \"../../components/dashboard/dashboard.component\";\r\n\r\nimport { AuthGuard } from \"src/app/auth.guard\";\r\nimport { UserHistoryComponent } from \"src/app/components/user-history/user-history.component\";\r\nimport { RecommendationsComponent } from \"src/app/components/recommendations/recommendations.component\";\r\n\r\n\r\nexport const AdminLayoutRoutes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'userhistory', component: UserHistoryComponent },\r\n  { path: 'recommendations', component: RecommendationsComponent },\r\n];\r\n"],"sourceRoot":"webpack:///"}